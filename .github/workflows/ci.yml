name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CLUSTER_NAME: mycluster
  KUBECONFIG: ${{ github.workspace }}/.kube/config

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Setup Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates curl gnupg
          sudo install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          sudo chmod a+r /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo chmod 666 /var/run/docker.sock

      - name: ⚙️ Install cluster tools
        run: |
          sudo apt-get install -y curl
          make install

      - name: 🏗 Build images
        run: |
          make build
          for service in auth-service patient-service api-gateway billing-service analytics-service; do
            k3d image import $service -c $CLUSTER_NAME
          done

      - name: 🚀 Deploy system
        run: |
           kubectl cluster-info
           kubectl get nodes
          make deploy
        
        run: |
          kubectl rollout status deployment/auth-db --timeout=180s
          kubectl rollout status deployment/patient-db --timeout=180s
          kubectl rollout status deployment/kafka --timeout=180s
          for service in auth-service patient-service api-gateway billing-service analytics-service; do
            kubectl rollout status deployment/$service --timeout=180s
          done
          make status

      - name: 🧪 Run smoke tests
        run: |
          kubectl port-forward svc/api-gateway 30004:4004 &
          sleep 10  # Wait for port-forward
          
          # Test API endpoints
          curl --retry 5 --retry-delay 5 --retry-connrefused -sSf http://localhost:30004/api-docs/auth | grep -q "openapi" || (echo "❌ Auth Service API Docs Check Failed"; exit 1)
          curl --retry 5 --retry-delay 5 --retry-connrefused -sSf http://localhost:30004/api-docs/patients | grep -q "openapi" || (echo "❌ Patient Service API Docs Check Failed"; exit 1)

      - name: 📊 Final status
        if: always()
        run: make status

      - name: 🧹 Cleanup
        if: always()
        run: |
          make down
          k3d cluster delete $CLUSTER_NAME
          docker system prune -af
