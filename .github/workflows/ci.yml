name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - name: 🛎 Checkout code
        uses: actions/checkout@v2

      - name: 🐳 Install Docker
        run: |
          # Remove conflicting packages
          sudo apt-get remove -y containerd docker docker-engine docker.io
          
          # Add Docker's official GPG key
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          
          # Set up the repository
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          
          # Update and install
          sudo apt-get update -qq
          sudo apt-get install -y -qq docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          
          # Configure permissions
          sudo usermod -aG docker $USER
          newgrp docker

      - name: ⚙️ Install k3d and kubectl
        run: |
          curl -sL https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
          curl -LOs "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - name: 🎯 Create k3d cluster
        run: |
          # Create cluster with explicit config
          k3d cluster create mycluster \
            --wait \
            --kubeconfig-update-default=false \
            --port "4004:30004@loadbalancer" \
            --api-port 6443
          
          # Get kubeconfig and set permissions
          mkdir -p ${HOME}/.kube
          k3d kubeconfig get mycluster > ${HOME}/.kube/config
          chmod 600 ${HOME}/.kube/config
          
          # Verify access
          kubectl cluster-info

      - name: 🏗 Build Docker images
        run: make build

      - name: 🚀 Deploy to cluster
        run: make deploy

      - name: ⏳ Wait for services to be ready
        run: |
          # kubectl wait --for=condition=available --timeout=300s deployment/auth-service
          # kubectl wait --for=condition=available --timeout=300s deployment/patient-service
          # kubectl wait --for=condition=available --timeout=300s deployment/api-gateway
          sleep 20  # Additional buffer for ingress controller

      - name: 🧪 Test API endpoints
        run: |
          echo "Testing API documentation endpoints..."
          # Test auth-service API docs
          curl  http://localhost:30004/api-docs/auth | grep -q "openapi" || (echo "❌ Auth Service API Docs Check Failed"; exit 1)
          echo "✅ Auth Service API Docs Verified"
          
          # Test patient-service API docs
          curl  http://localhost:30004/api-docs/patients | grep -q "openapi" || (echo "❌ Patient Service API Docs Check Failed"; exit 1)
          echo "✅ Patient Service API Docs Verified"
